$(document).ready(function () {
  // DEFAULT VALUES FOR PHP SERVER SIDE DATATABLE STARTS HERE
  $.extend($.fn.dataTable.defaults, {
    pagingType: "full_numbers",
    searching: false,
    destroy: true,
    serverSide: true,
    processing: true,
    ordering: false,
    drawCallback: callBackDefault,
  });
  function callBackDefault() {
    $(".paginate_button").addClass("page-link");
    $("#DataTables_Table_0_first").html(
      '<i class="fas fa-angle-double-left"></i>'
    );
    $("#DataTables_Table_0_previous").html('<i class="fas fa-angle-left"></i>');
    $("#DataTables_Table_0_next").html('<i class="fas fa-angle-right"></i>');
    $("#DataTables_Table_0_last").html(
      '<i class="fas fa-angle-double-right"></i>'
    );
  }
  // DEFAULT VALUES FOR PHP SERVER SIDE DATATABLE ENDS HERE

  // GENEREIC DELET MODAL VALUE PLACER STARTS HERE
  $(".deleteModal").on("hide.bs.modal", function () {
    $(".modal-body").find('[type="hidden"]').val(null);
  });
  $(".deleteModal").on("show.bs.modal", function (event) {
    var modal = $(this);
    var button = $(event.relatedTarget);
    modal.find('[type="hidden"]').val(button.data("id"));
  });
  // GENEREIC DELET MODAL VALUE PLACER ENDS HERE
  typeof toCall !== "undefined" && window[toCall]();

  // TRIGGERING SEARCH ON TABLE HEAD DATEPICKER STARTS
  $(".hasInput .date-time-range-picker").on(
    "apply.daterangepicker",
    function (ev, picker) {
      $(this).val(
        picker.startDate.format("DD-MM-YYYY hh:mm A") +
          " to " +
          picker.endDate.format("DD-MM-YYYY hh:mm A")
      );
      window[toCall]();
    }
  );
  $(".hasInput .date-time-range-picker").on(
    "cancel.daterangepicker",
    function (ev, picker) {
      $(this).val("");
      window[toCall]();
    }
  );
  // TRIGGERING SEARCH ON TABLE HEAD DATEPICKER ENDS

  // TRIGGERING SEARCH ON TABLE HEAD DATERANGEPICKER STARTS
  $(".hasInput .date-range-picker").on(
    "apply.daterangepicker",
    function (ev, picker) {
      $(this).val(
        picker.startDate.format("DD-MM-YYYY") +
          " to " +
          picker.endDate.format("DD-MM-YYYY")
      );
      window[toCall]();
    }
  );
  $(".hasInput .date-range-picker").on(
    "cancel.daterangepicker",
    function (ev, picker) {
      $(this).val("");
      window[toCall]();
    }
  );
  // TRIGGERING SEARCH ON TABLE HEAD DATERANGEPICKER ENDS
  // TRIGGERING SEARCH ON TABLE ENTER || TAB STARTS
  $(".hitSearch").keyup(function (e) {
    if (e.keyCode == 13) {
      window[toCall]();
    }
  });
  // TRIGGERING SEARCH ON TABLE ENTER || TAB ENDS
  // TRIGGERING SEARCH ON TABLE DROPWDOWN STARTS

  $("select.hitSearch").change(function (e) {
    window[toCall]();
  });

  // TRIGGERING SEARCH ON TABLE DROPWDOWN ENDS

  // RESETING SARCH VALUES STARTS HERE
  $(".resetSearch").click(function () {
    $(".data-feed-crud thead")
      .find("input,select")
      .each(function () {
        $(this).val(null).trigger("change");
      });
    window[toCall]();
  });
  // RESETING SARCH VALUES ENDS HERE

  setTimeout(function () {
    $(".phpMsg").slideUp();
  }, 10000);
  $(".select2").select2();

  $(".datepicker").daterangepicker({
    singleDatePicker: true,
    autoUpdateInput: false,
    locale: { cancelLabel: "Clear" },
    showDropdowns: true,
    minYear: 1901,
    maxYear: parseInt(moment().format("YYYY"), 10),
  });
  $(".datepicker").on("apply.daterangepicker", function (ev, picker) {
    $(this).val(picker.startDate.format("DD-MM-YYYY")).trigger("change");
  });
  $(".date-time-picker").daterangepicker({
    singleDatePicker: true,
    timePicker: true,
    showDropdowns: true,
    autoUpdateInput: false,
    locale: { cancelLabel: "Clear" },
    minYear: 1901,
    maxYear: parseInt(moment().format("YYYY"), 10),
  });
  $(".date-time-picker").on("apply.daterangepicker", function (ev, picker) {
    $(this)
      .val(picker.startDate.format("DD-MM-YYYY  hh:mm A"))
      .trigger("change");
  });
  var start = moment().subtract(1825, "days");
  var end = moment();
  $(".date-range-picker").daterangepicker(
    {
      autoUpdateInput: false,
      locale: { cancelLabel: "Clear" },
      startDate: start,
      endDate: end,
      ranges: {
        Today: [moment(), moment()],
        Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days")],
        "Last 7 Days": [moment().subtract(6, "days"), moment()],
        "Last 30 Days": [moment().subtract(29, "days"), moment()],
        "This Month": [moment().startOf("month"), moment().endOf("month")],
        "Last Month": [
          moment().subtract(1, "month").startOf("month"),
          moment().subtract(1, "month").endOf("month"),
        ],
      },
    },
    cb
  );
  $(".date-time-range-picker").daterangepicker(
    {
      showDropdowns: true,
      timePicker: true,
      autoUpdateInput: false,
      locale: { cancelLabel: "Clear" },
    },
    ad
  );
});
function ad(start, end) {
  $("#reportrange span").html(
    start.format("MMMM D, YYYY hh:mm A") +
      " - " +
      end.format("MMMM D, YYYY hh:mm A")
  );
}
function cb(start, end) {
  $("#reportrange span").html(
    start.format("MMMM D, YYYY") + " - " + end.format("MMMM D, YYYY")
  );
}
$(
  ".datepicker,.date-time-picker,.date-range-picker,.date-time-range-picker"
).on("cancel.daterangepicker", function (ev, picker) {
  $(this).val("");
});
$(".date-time-range-picker").on("apply.daterangepicker", function (ev, picker) {
  $(this).val(
    picker.startDate.format("DD-MM-YYYY") +
      " to " +
      picker.endDate.format("DD-MM-YYYY")
  );
});
$(".date-range-picker").on("apply.daterangepicker", function (ev, picker) {
  $(this).val(
    picker.startDate.format("DD-MM-YYYY") +
      " to " +
      picker.endDate.format("DD-MM-YYYY")
  );
});
$(".numbersOnly").on("keyup blur", function () {
  this.value = this.value.replace(/[^a-z\+.-_]/g, "");
});
$("[type='file']").bind("on change", function (e) {
  $(this)
    .closest(".imageUploadContainer")
    .find("img")
    .attr("src", URL.createObjectURL(e.target.files[0]))
    .on(function () {
      URL.revokeObjectURL($(this).src);
    });
});
function toaster($msg, $color = "primary") {
  $(".msgNotice").slideUp();
  setTimeout(function () {
    $(".msgNotice").remove();
  }, 100);
  setTimeout(function () {
    $("body").prepend(
      `<div class="msgNotice z-depth-1 bg-${$color}"> ${$msg} </div>`
    );
  }, 200);
  setTimeout(function () {
    $(".msgNotice").fadeOut();
  }, 15000);
}
$(document.body).on("click", ".showRowAction", function (e) {
  $(".rowAction").removeClass("show");
  e.stopPropagation();
  $(this).closest("tr").find(".rowAction").toggleClass("show");
});
$(document.body).on("click", function (e) {
  if ($(".rowAction").hasClass("show")) $(".rowAction").removeClass("show");
});
$(".exportViewOnly").click(function (e) {
  (table = $(".table-striped")),
    $(".table-striped").append($(this).find("tfoot").html()),
    table &&
      table.length &&
      $(table).table2excel({
        exclude: ".noExl",
        name: $("title").html(),
        filename:
          $("title").html() +
          new Date().toISOString().replace(/[\-\:\.]/g, "") +
          ".xlsx",
        fileext: ".xlsx",
        exclude_img: !0,
        exclude_links: !0,
        exclude_inputs: !0,
        exclude_select: !0,
        exclude_collection: !0,
      });
});
function getPageName() {
  return window.location.pathname.split("/").pop();
}

$("[type='checkbox']:required").on("change", function (e) {
  var checkboxGroup = $("[name='" + $(this).attr("name") + "']").filter(
    '[name="' + $(this).attr("name") + '"]'
  );
  var isChecked = checkboxGroup.is(":checked");
  checkboxGroup.prop("required", !isChecked);
});

function hideForm(e) {
  if (typeof CKEDITOR !== "undefined") {
    $(".ckeditor").each(function () {
      CKEDITOR.instances[$(this).attr("id")].setData("");
    });
  }
  $(".removeDuplicateRow").closest(".row").remove(),
    $("#manage" + e)
      .find(".form-control,select,textarea")
      .val("")
      .trigger("change"),
    $("#manage" + e)
      .find(".imageUploadContainer img")
      .attr("src", null),
    $("#manage" + e)
      .find('[type="radio"]')
      .prop("checked", !1)
      .trigger("change"),
    $("#manage" + e)
      .find('[type="checkbox"]')
      .prop("checked", !1)
      .trigger("change"),
    $("#manage" + e).slideUp(),
    $("#" + e + "Container").slideDown();
}

function pushToServer(data, link, page) {
  $.ajax({
    type: "POST",
    cache: false,
    contentType: false,
    processData: false,
    beforeSend: function () {
      $(".complete-form-package")
        .find('[type="submit"]')
        .attr("disabled", "disabled");
      $(".complete-form-package").css("pointer-events", "none");
    },
    data: data,
    url: link,
    success: function (response) {
      if (response == "updated") {
        toaster('<i class="far fa-edit"></i> Entry Updated', "primary");
        hideForm(page);
        window[toCall]();
      } else if (response == "created") {
        hideForm(page);
        toaster(
          '<i class="fas fa-swimming-pool"></i> Entry Created',
          "success"
        );
        window[toCall]();
      } else if (response != "created" || response != "updated") {
        toaster('<i class="far fa-times-circle"></i> ' + response, "danger");
      }

      $(".modal-backdrop").remove();
      element.find('[type="submit"]').removeAttr("disabled");
      element.css("pointer-events", "all");
    },
  });
}

function c(check) {
  if (typeof check == "undefined") return "-";
  else return check;
}

function deleteFromServer(link, data, parent, type) {
  $.ajax({
    url: link,
    type: "POST",
    data: data,
    beforeSend: function () {
      element.attr("disabled", "disabled");
      element.closest("form").css("pointer-events", "none");
    },
    success: function (response) {
      if (response == "true") {
        if (type == "delete")
          toaster('<i class="far fa-trash-alt"></i> Entry Deleted', "danger");
        else
          toaster(
            '<i class="far fa-trash-restore"></i> Entry Restored',
            "success"
          );
        page_name = getPageName();
        page_name = page_name.split("-");
        if (parent.length == 0) window[toCall]();
        else window.location.href = parent;
      } else {
        toaster('<i class="far fa-times-circle"></i> Invalid Entry', "danger");
      }
      if (type == "delete") $(".modal").modal("hide");
      if (type == "restore") $(".modal").modal("hide");
      $(".modal-backdrop").remove();
      element.removeAttr("disabled");
      element.closest("form").css("pointer-events", "all");
    },
  });
}

$(document.body).on("mouseenter", "tr", function (e) {
  $(".btn-collection").hide();
  $(this).find(".btn-collection").show();
});
$(document.body).on("click", "tr", function (e) {
  $(".btn-collection").hide();
});
$(document.body).on("click", ".removeDuplicateRow", function (e) {
  $(this).closest(".row").remove();
});

$("#createNewRow").click(function (e) {
  data = $("#targetForReplica").html();
  data = `<div class='row multipleRows my-2 pb-3 pt-3'>${data}<div class="col-lg-1 text-right "><button class="btn btn-sm mt-2 removeDuplicateRow btn-danger text-right"><i class="fas fa-minus"></i></button></div>`;
  $("#targetForReplica").closest(".container-fluid").append(data);
  $("#targetForReplica")
    .closest(".container-fluid")
    .find(".row:last")
    .find("input,select,teaxtarea")
    .val("")
    .change();
});
